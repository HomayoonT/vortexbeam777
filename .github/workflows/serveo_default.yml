name: Linux VNC

on:
  workflow_dispatch:

jobs:
  linux_vnc:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xvfb x11vnc wget curl jq default-jre unzip python3-pip xfce4 xfce4-goodies openssh-client

      - name: Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb || sudo apt -f install -y

      - name: Verify Google Chrome installation
        run: google-chrome --version

      - name: Set up Xvfb, Xfce, and VNC
        run: |
          # Start Xvfb (creates a virtual display)
          Xvfb :1 -screen 0 1024x768x16 &
          export DISPLAY=:1
          echo "export DISPLAY=:1" >> $GITHUB_ENV
          sleep 2

          # Start the Xfce desktop environment
          startxfce4 &
          sleep 5

          # Set up and start the VNC server using x11vnc
          x11vnc -storepasswd ${{ secrets.VNC_PASSWORD }} /tmp/passwd
          x11vnc -forever -rfbauth /tmp/passwd -display :1 -shared -bg
          sleep 1

      - name: Generate unique port and start Serveo tunnel
        run: |
          # Generate a unique port number based on the run ID
          BASE_PORT=1024
          UNIQUE_PORT=$((BASE_PORT + (${GITHUB_RUN_ID} % 64512)))
          echo "Using port: $UNIQUE_PORT"

          # Start Serveo tunnel with the unique port
          ssh -R vnc-${GITHUB_RUN_ID}:$UNIQUE_PORT:localhost:$UNIQUE_PORT serveo.net > serveo.log 2>&1 &
          sleep 5

      - name: Display Serveo public VNC address
        run: |
          echo "‚è≥ Detecting Serveo public address..."
          # With a unique subdomain and port, the address is predictable.
          SUBDOMAIN="vnc-${GITHUB_RUN_ID}"
          VNC_ADDRESS="${SUBDOMAIN}.serveo.net:$UNIQUE_PORT"
          
          # Optionally, verify this in the serveo log
          cat serveo.log
          echo "‚úÖ Public VNC address: $VNC_ADDRESS"
          echo "üîó Use this address in your VNC client (e.g., RealVNC): $VNC_ADDRESS"

      - name: Confirm DISPLAY env
        run: echo $DISPLAY

      - name: Keep job alive (waiting for continue.txt)
        run: |
          echo "üîß Session is active. Connect your VNC client to the address above."
          echo "Create a file named 'continue.txt' in the repository to proceed."
          while [ ! -f continue.txt ]; do
            sleep 10
          done
